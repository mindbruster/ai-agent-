#!/usr/bin/env python3
"""
Environment Setup Script for AI Agent Workflow System
Helps users set up their .env file with API keys
"""

import os
import shutil
from pathlib import Path

def setup_environment():
    """Setup environment variables for the AI Agent Workflow System"""
    print("="*60)
    print("AI AGENT WORKFLOW SYSTEM - ENVIRONMENT SETUP")
    print("="*60)
    print()
    
    # Check if .env file already exists
    env_file = Path(".env")
    if env_file.exists():
        response = input("A .env file already exists. Do you want to overwrite it? (y/n): ").strip().lower()
        if response not in ['y', 'yes']:
            print("Setup cancelled.")
            return
    
    print("This script will help you set up your API keys and credentials.")
    print("Your sensitive data will be stored in a .env file (not committed to git).")
    print()
    
    # Get API keys from user
    print("1. GEMINI API KEY")
    print("   Get your API key from: https://aistudio.google.com/app/apikey")
    gemini_key = input("   Enter your Gemini API key: ").strip()
    
    print("\n2. HUBSPOT API KEY")
    print("   Get your API key from: https://app.hubspot.com/settings/integrations")
    hubspot_key = input("   Enter your HubSpot API key: ").strip()
    
    print("\n3. EMAIL CREDENTIALS")
    email_user = input("   Enter your Gmail address: ").strip()
    email_pass = input("   Enter your Gmail app password: ").strip()
    
    # Create .env file
    env_content = f"""# API Keys and Secrets
# Generated by setup_env.py

# Gemini API Configuration
GEMINI_API_KEY={gemini_key}

# HubSpot API Configuration  
HUBSPOT_API_KEY={hubspot_key}

# Email Configuration
EMAIL_USERNAME={email_user}
EMAIL_PASSWORD={email_pass}
"""
    
    try:
        with open(".env", "w") as f:
            f.write(env_content)
        
        print("\n" + "="*60)
        print("SETUP COMPLETE!")
        print("="*60)
        print()
        print("✅ .env file created successfully")
        print("✅ Your API keys are now stored securely")
        print("✅ The system is ready to use!")
        print()
        print("Next steps:")
        print("1. Run: python main.py")
        print("2. Or test with: python main.py -q \"Create a contact John Doe, john@example.com\"")
        print()
        print("Note: The .env file is already in .gitignore and won't be committed to git.")
        
    except Exception as e:
        print(f"\n❌ Error creating .env file: {e}")
        print("Please create the .env file manually with your API keys.")

def main():
    """Main function"""
    try:
        setup_environment()
    except KeyboardInterrupt:
        print("\n\nSetup cancelled by user.")
    except Exception as e:
        print(f"\n❌ Setup failed: {e}")

if __name__ == "__main__":
    main()
